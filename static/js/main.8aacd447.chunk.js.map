{"version":3,"sources":["images/people/person1.jpg","images/people/person2.jpg","images/people/person3.jpg","images/structure/structure1.jpg","images/structure/structure2.jpg","images/structure/structure3.jpg","images/texture/colorful.jpg","images/texture/lightstreak.jpg","images/texture/sparkle.jpg","components/parts/CardImgSelector.jsx","components/parts/Cards.jsx","components/SelectorView.jsx","components/EditorView.jsx","container/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ImgSelector","styled","div","_templateObject","StyledImg","img","_templateObject2","CardImgSelector","props","images","changeDisplay","item","setPersonImage","react_default","a","createElement","className","onClick","map","index","react","key","src","Card","Cards_templateObject","CardTitle","h2","Cards_templateObject2","theme","main","Cards","title","description","value","parts_CardImgSelector","SelectorContainer","SelectorView_templateObject","MenuButton","SelectorView_templateObject2","MenuIcon","_templateObject3","TopLineMenuIcon","_templateObject4","BottomLineMenuIcon","_templateObject5","Title","h1","_templateObject6","SelectorView","_useState","useState","_useState2","Object","slicedToArray","closeSelector","setCloseSelector","_useState3","_useState4","portraitSection","setPortraitSection","_useState5","_useState6","structureSection","setStructureSection","_useState7","_useState8","lightSection","setLightSection","toggleSectionDisplay","editorCards","person","structure","texture","moveElement","rotateTopMenuIcon","rotateBottomMenuIcon","selector","parts_Cards","EditorContainer","EditorView_templateObject","SingleImg","EditorView_templateObject2","DoubleExposure","EditorView_templateObject3","EditorView","showPicture","Body","App_templateObject","App","setShowPicture","person1","person2","person3","structure1","structure2","structure3","texture1","texture2","texture3","components_SelectorView","url","showPictureClone","objectSpread","components_EditorView","Boolean","window","location","hostname","match","ReactDOM","render","container_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8aacd447.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person1.5d4970b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/person2.b481f019.jpg\";","module.exports = __webpack_public_path__ + \"static/media/person3.7a1a90db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/structure1.af010f95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/structure2.a3bfd2fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/structure3.048fb244.jpg\";","module.exports = __webpack_public_path__ + \"static/media/colorful.0ece3047.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lightstreak.cd44ed8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sparkle.c3ef943e.jpg\";","import React, { Fragment } from 'react';\nimport styled from 'styled-components'\n\nconst ImgSelector = styled.div`\nheight: 100%;\nwidth: 100%;\nposition: relative;\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\ni.fa-long-arrow-alt-left {\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  color: #9f9ba8;\n  font-size: 20px;\n  transition: transform .5s ease-out;\n  :hover {\n    transform: scale(1.2);\n    cursor: pointer;\n  }\n}\n`\nconst StyledImg = styled.img`\n  width: 115px;\n  height: 115px;\n  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n  transition: transform .5s ease-out;\n  :hover {\n    cursor: pointer;\n    transform: scale(1.2);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n  }\n`\n\n\n\nconst CardImgSelector = (props) => {\n  const { images, changeDisplay, item, setPersonImage } = props\n  return (\n    <ImgSelector className={'imgSelector'} >\n      <i className=\"fas fa-long-arrow-alt-left\" onClick={() => changeDisplay(item)}></i>\n      {images.map((img, index) => (\n        <Fragment key={index}>\n          <StyledImg src={img} onClick={() => setPersonImage(item, img)} />\n        </Fragment>\n      ))}\n    </ImgSelector>\n\n  )\n}\n\nexport default CardImgSelector;\n","import React from 'react';\nimport styled from 'styled-components'\n\nimport CardImgSelector from './CardImgSelector'\n\nconst Card = styled.div`\nmin-width: 400px;\nheight: 30%;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nbackground-image: linear-gradient(-240deg, #332d49, #311439);\nmargin: 10px;\nborder-radius: 10px;\nbox-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\ntransition: 0.5s ease;\n:hover {\n  transform: scale(1.05);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  .cardFront {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100%;\n    width: 100%;\n    cursor: pointer;\n  }\n}\n.description {\n  display: inline;\n  font-size: 18px;\n  margin: 10px;\n  color: #9f9ba8;\n}\ni.fa-long-arrow-alt-right {\n  color: #9f9ba8;\n  font-size: 16px;\n  transition: transform .5s ease-out;\n}\n:hover .fa-long-arrow-alt-right {\n    transform: translateX(10px) scale(1.2);\n  }\n`\n\nconst CardTitle = styled.h2`\nbackground: linear-gradient(to right, #f750a2 0%, #ff7c7e 100%);\nbackground: ${props => props.theme.main};\nbackground-clip: text;\n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\nfont-size: 40px;\nmargin: 0 10px 8px 10px;\n`\n\nconst Cards = (props) => {\n  const { title, theme, description, changeDisplay, item, images, value, setPersonImage } = props\n\n  return (\n    <Card>\n      {!value && <div className={'cardFront'} onClick={() => changeDisplay(item)}>\n        <CardTitle theme={theme}>{title}</CardTitle>\n          <div>\n            <p className={'description'}>{description}</p>\n            <i className=\"fas fa-long-arrow-alt-right\"></i>\n          </div>\n        </div>}\n        {value && <CardImgSelector changeDisplay={changeDisplay} images={images} item={item} setPersonImage={setPersonImage} />}\n    </Card >\n  )\n}\n\nexport default Cards;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components'\n\nimport Cards from './parts/Cards'\n\nconst SelectorContainer = styled.div`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\nbackground-color: #1d0c26;\nheight: 95vh;\nmin-width: 70px;\nwidth: 440px;\nmargin: 20px 10px 20px 0;\ntransition: .3s ease;\n&&.moveElement {\n  width: 70px;\n  height: 70px;\n  border-radius: 50px;\n  margin: 15px;\n}\n.cardContainer {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 10px;\n  height: 100%;\n}\n`\n\nconst MenuButton = styled.div`\n  position: absolute;\n  margin: 20px;\n  right: 0;\n  top: 0;\n  width: 22px;\n  height: 22px;\n:hover {\n  cursor: pointer;\n  opacity: .5;\n}\n`\nconst MenuIcon = styled.div`\n  position: absolute;\n  height: 33px;\n  width: 2px;\n  background-color: white;\n  transition: .5s;\n  left: 50%;\n  &&.rotateTopMenuIcon {\n    transform: rotate(90deg) translateX(50%) translateY(5px) scale(.8);\n    top: -50%;\n\n    :after {\n      position: absolute;\n      left: 12px;\n      content: '';\n      height: 33px;\n      width: 2px;\n      background-color: white;\n    }\n      }\n  &&.rotateBottomMenuIcon {\n    transform: rotate(90deg) translateX(-50%) translateY(5px) scale(.8);\n    top: 50%;\n}\n`\nconst TopLineMenuIcon = styled(MenuIcon)`\n  transform: rotate(45deg);\n`\nconst BottomLineMenuIcon = styled(MenuIcon)`\n  transform: rotate(-45deg);\n`\n\n\nconst Title = styled.h1`\nfont-size: 36px;\ncolor: white;\nmargin: 15px 20px 10px 20px;\n`\n\nconst SelectorView = props => {\n  const { images, setPersonImage } = props\n  const [closeSelector, setCloseSelector] = useState(false);\n  const [portraitSection, setPortraitSection] = useState(false);\n  const [structureSection, setStructureSection] = useState(false);\n  const [lightSection, setLightSection] = useState(false);\n\n  const toggleCloseSelector = () => setCloseSelector(!closeSelector)\n  const toggleSectionDisplay = (item) => {\n    if (item === 'portraitSection') {\n      setPortraitSection(!portraitSection)\n      setStructureSection(false)\n      setLightSection(false)\n\n    } else if (item === 'structureSection') {\n      setPortraitSection(false)\n      setStructureSection(!structureSection)\n      setLightSection(false)\n\n    } else if (item === 'lightSection') {\n      setPortraitSection(false)\n      setStructureSection(false)\n      setLightSection(!lightSection)\n    }\n  }\n\n  const editorCards = [\n    {\n      title: 'Choose a Portrait',\n      theme: 'linear-gradient(to right, #f750a2, #ff7c7e, #ff7c7e)',\n      description: 'Select the main portrait to edit',\n      item: 'portraitSection',\n      value: portraitSection,\n      images: images.person\n    },\n    {\n      title: 'Provide Atmosphere',\n      theme: 'linear-gradient(to right, #fcde8a, #ff8f89, #ff8f89, #ff8f89)',\n      description: 'Give the image depth',\n      item: 'structureSection',\n      value: structureSection,\n      images: images.structure\n    },\n    {\n      title: 'Add the Magic',\n      theme: 'linear-gradient(to right, #42e697, #3cbabb, #3cbabb)',\n      description: 'Finish with a splash of fun',\n      item: 'lightSection',\n      value: lightSection,\n      images: images.texture\n    }\n  ]\n\n  let moveElement = !closeSelector ? '' : 'moveElement'\n  let rotateTopMenuIcon = !closeSelector ? '' : 'rotateTopMenuIcon'\n  let rotateBottomMenuIcon = !closeSelector ? '' : 'rotateBottomMenuIcon'\n\n\n  return (\n    <SelectorContainer className={moveElement}>\n      <MenuButton onClick={() => toggleCloseSelector()}>\n        <TopLineMenuIcon className={rotateTopMenuIcon} />\n        <BottomLineMenuIcon className={rotateBottomMenuIcon} />\n      </MenuButton>\n      {!closeSelector && <Fragment>\n        <Title>Editor</Title>\n        <div className={'cardContainer'}>\n          {editorCards.map((selector, index) => (\n            <Cards\n              key={index}\n              theme={{ main: selector.theme }}\n              title={selector.title}\n              description={selector.description}\n              item={selector.item}\n              changeDisplay={toggleSectionDisplay}\n              images={selector.images}\n              value={selector.value}\n              setPersonImage={setPersonImage}\n              closeSelector={closeSelector} />\n          ))}\n        </div>\n      </Fragment>\n      }\n    </SelectorContainer >\n  )\n}\n\nexport default SelectorView;\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst EditorContainer = styled.div`\nflex-grow: 1;\nposition: relative;\nbackground-color: #1d0c26;\nheight: 95vh;\nmargin: 20px;\n`\nconst SingleImg = styled.img`\n  width: 70%;\n  max-width: 700px;\n  height: auto;\n  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.75);\n  transition: transform .5s ease-out;\n  position: absolute;\n  top: 50%; left: 50%;\n  transform: translate(-50%,-50%);\n`\nconst DoubleExposure = styled(SingleImg)`\n  mix-blend-mode: screen;\n`\n\nconst EditorView = props => {\n  const { showPicture } = props\n\n  return (\n    <EditorContainer>\n      <SingleImg src={showPicture.portraitSection} />\n      <DoubleExposure src={showPicture.structureSection} />\n      <DoubleExposure src={showPicture.lightSection} />\n    </EditorContainer>\n  )\n}\n\nexport default EditorView;\n","import React, { useState } from 'react';\nimport styled from 'styled-components'\n\nimport SelectorView from '../components/SelectorView'\nimport EditorView from '../components/EditorView'\n\nimport person1 from '../images/people/person1.jpg'\nimport person2 from '../images/people/person2.jpg'\nimport person3 from '../images/people/person3.jpg'\n\nimport structure1 from '../images/structure/structure1.jpg'\nimport structure2 from '../images/structure/structure2.jpg'\nimport structure3 from '../images/structure/structure3.jpg'\n\nimport texture1 from '../images/texture/colorful.jpg'\nimport texture2 from '../images/texture/lightstreak.jpg'\nimport texture3 from '../images/texture/sparkle.jpg'\n\nconst Body = styled.div`\ndisplay: flex;\njustify-content: center;\nbackground-color: #25132f;\nheight: 100vh;\nwidth: 100vw;\n`\n\nconst App = () => {\n  const [showPicture, setShowPicture] = useState({portraitSection: '', structureSection: '', lightSection: ''});\n  const images = { person: [person1, person2, person3], structure: [structure1, structure2, structure3], texture: [texture1, texture2, texture3] }\n\n  const setPersonImage = (item, url) => {\n    let showPictureClone = {...showPicture}\n    showPictureClone[item] = url\n    setShowPicture(showPictureClone)\n  }\n\n  return (\n    <Body>\n      <SelectorView images={images} setPersonImage={setPersonImage} />\n      <EditorView showPicture={showPicture} />\n    </Body >\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}